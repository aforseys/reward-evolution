0 # initial state
[3, 4, 5] # terminal states (having 3 allows for states to be able to terminate by reaching targets out of order and hazards) 
(0,0,'!c&!b&!d&!h',ConstantRewardFunction(-1))
(0,3,'h',ConstantRewardFunction(-100)) #terminates & penalizes if visits hazard 
(0,4,'c',ConstantRewardFunction(-100)) #terminates & penalizes if visits c first  
(0,5,'d',ConstantRewardFunction(-100)) #terminates & penalizes if visits d first  
(0,1,'b', ConstantRewardFunction(-1))  #visits b and transitions
(1,1,'!c&!d&!h',ConstantRewardFunction(-1))
(1,3,'h',ConstantRewardFunction(-100)) #terminates & penalizes if visits hazard 
(1,5,'d',ConstantRewardFunction(-100)) #terminates & penalizes if visits d first (could use either 4 or 5) 
(1,2,'c', ConstantRewardFunction(-1))  #visits c and transitions
(2,2,'!d&!h',ConstantRewardFunction(-1))
(2,3,'h',ConstantRewardFunction(-100)) #terminates & penalizes if visits hazard 
(2,4,'d',ConstantRewardFunction(100)) #positive final state termination (could use either 4 or 5) 